# Run the OS using QEMU in debug mode
.PHONY: run_debug
run_debug:
	@if ! command -v qemu-system-aarch64 >/dev/null 2>&1; then \
		echo "Error: qemu-system-aarch64 not found."; \
		exit 1; \
	fi
	@qemu-system-aarch64 										\
	-M virt 													\
	-m 512M 													\
	-cpu cortex-a53 											\
	-nographic 													\
	-kernel $(BOOT_ELF_DIR)										\
	-serial mon:stdio											\
	-device loader,file=$(LEONARD_OS_IMG),addr=0x0				\
	-no-reboot 													\
	-s -S -d int,unimp,guest_errors &							\

# Run the OS using QEMU
.PHONY: run
run:
	@make run_el1

# Run the OS using QEMU in EL1
.PHONY: run_el1
run_el1:
	@if ! command -v qemu-system-aarch64 >/dev/null 2>&1; then \
		echo "Error: qemu-system-aarch64 not found."; \
		exit 1; \
	fi
	@qemu-system-aarch64											\
		-M virt														\
		-m 512M														\
		-cpu cortex-a53												\
		-nographic													\
		-kernel $(BOOT_ELF_DIR)										\
		-serial mon:stdio 											\
		-device loader,file=$(LEONARD_OS_IMG),addr=0x0				\
		-no-reboot &

# Run the OS using QEMU in EL2
.PHONY: run_el2
run_el2:
	@if ! command -v qemu-system-aarch64 >/dev/null 2>&1; then \
		echo "Error: qemu-system-aarch64 not found."; \
		exit 1; \
	fi
	@qemu-system-aarch64											\
		-M virt														\
		-m 512M														\
		-cpu cortex-a53												\
		-nographic													\
		-kernel $(BOOT_ELF_DIR)										\
		-serial mon:stdio 											\
		-device loader,file=$(LEONARD_OS_IMG),addr=0x0				\
		-no-reboot													\
		-machine virtualization=on &

# Run the OS using QEMU in EL3
.PHONY: run_el3
run_el3:
	@if ! command -v qemu-system-aarch64 >/dev/null 2>&1; then \
		echo "Error: qemu-system-aarch64 not found."; \
		exit 1; \
	fi
	@qemu-system-aarch64											\
		-M virt														\
		-m 512M														\
		-cpu cortex-a53												\
		-nographic													\
		-kernel $(BOOT_ELF_DIR)										\
		-serial mon:stdio 											\
		-device loader,file=$(LEONARD_OS_IMG),addr=0x0				\
		-no-reboot													\
		-machine virtualization=on									\
		-machine secure=on &
